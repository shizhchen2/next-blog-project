
# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs {
  server nextjs:3000;
}

server {
    listen    80;       #侦听80端口，如果强制所有的访问都必须是HTTPs的，这行需要注销掉
    server_name  www.timmychen.top;             #域名

    return 301 https://www.timmychen.top$request_uri;    #跳转到Https 
}
 
server {
    listen    443;
    server_name   www.timmychen.top;             #域名
 
    # 增加ssl
    ssl on;        #如果强制HTTPs访问，这行要打开
    ssl_certificate /ssl/5192395_timmychen.top.pem;
    ssl_certificate_key /ssl/5192395_timmychen.top.key;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;
 
    # 指定密码为openssl支持的格式
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
     
    # 密码加密方式
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    # 依赖SSLv3和TLSv1协议的服务器密码将优先于客户端密码
    ssl_prefer_server_ciphers on;
 
    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    # BUILT ASSETS (E.G. JS BUNDLES)
    # Browser cache - max cache headers from Next.js as build id in url
    # Server cache - valid forever (cleared after cache "inactive" period)
    location /_next/static {
        proxy_cache STATIC;
        proxy_pass http://nextjs;
    }

    # STATIC ASSETS (E.G. IMAGES)
    # Browser cache - "no-cache" headers from Next.js as no build id in url
    # Server cache - refresh regularly in case of changes
    location /static {
        proxy_cache STATIC;
        proxy_ignore_headers Cache-Control;
        proxy_cache_valid 60m;
        proxy_pass http://nextjs;
    }

    # DYNAMIC ASSETS - NO CACHE
    location / {
        proxy_pass http://nextjs;
    }
}


